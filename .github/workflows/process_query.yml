name: SQL Query Unifier

on:
  issues:
    types: [opened, edited]

jobs:
  process-queries:
    if: contains(github.event.issue.labels.*.name, 'sql-query')
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v3
      
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
          
      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub sqlparse
      
      - name: Criar diretório queries se não existir
        run: mkdir -p queries
      
      - name: Executar Query Unifier
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: python process_query.py
      
      - name: Upload unified query as artifact
        uses: actions/upload-artifact@v3
        with:
          name: unified-query-issue-${{ github.event.issue.number }}
          path: queries/unified-query-issue-${{ github.event.issue.number }}.sql